#!/usr/bin/env bash
# usage: bin/compile <build-dir> <cache-dir> <env-dir>

set -euo pipefail

function arrow() {
  sed -u 's/^/-----> /'
}

function indent() {
  sed -u 's/^/       /'
}

function cat_or() {
  echo $(cat $1 2>/dev/null || echo $2)
}

BASE_DIR=$PWD
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

BUILD_PACK_PATH=$(cd $(dirname $(dirname $0)); pwd)

NIM_VER=1.4.2
NIM_DIR=$CACHE_DIR/nim
NIM_CACHE_DIR=$CACHE_DIR/nimcache

NIM_BIN=$NIM_DIR/bin/nim
NIMBLE_BIN=$NIM_DIR/bin/nimble

PATH="$NIM_DIR/bin:$PATH"
export PATH

echo "Setting up Nim environment..." | arrow

echo "Setting up link to nim cache..." | indent
mkdir -p $NIM_CACHE_DIR
mkdir -p $HOME/.cache
ln -s $NIM_CACHE_DIR $HOME/.cache/nim

echo "Setting up nimble.ini and .nimble dir..." | indent
mkdir -p $CACHE_DIR/.nimble
mkdir -p $HOME/.config/nimble
cat > $HOME/.config/nimble/nimble.ini <<EOF
nimbleDir = "$CACHE_DIR/.nimble"
EOF

if [ ! -x $NIM_BIN ]; then
    echo "Installing Nim v$NIM_VER from x64 binary tarball..." | arrow
    cd $CACHE_DIR
    wget -nv https://nim-lang.org/download/nim-$NIM_VER-linux_x64.tar.xz
    mkdir $NIM_DIR
    tar -xf nim-$NIM_VER-linux_x64.tar.xz -C $NIM_DIR --strip 1
fi

echo "Writing export for multi-buildpack support" | indent
echo "export PATH=${NIM_DIR}/bin:\$PATH" > $BUILD_PACK_PATH/export

echo "Building app" | arrow
cd $BUILD_DIR
$NIMBLE_BIN release --accept
